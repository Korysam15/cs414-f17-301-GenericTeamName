Updated GetProfileTask.java to use ProfileManager

Updated ServerMain.java

GameServer.java: Added use of ProfileManager.java

SessionManager.java: Added additional handling for unregistering (IE. removing profile, games, invitations ect..)

ProfileManager.java: Added use of abstract methods (inside of non abstract methods)

GameManager.java: added method removePlayersGamesAsLoss (removes games, but gives the other player a win)

ProfileManager.java: Added singleton pattern

FileProfileManager.java: (Saves / restores players profile)

ProfileManager.java: Small changes to public interface ( Added a new method )

Added ProfileBuilder.java: Converts Profiles to and from Strings

History.java: Added a new constructor for use with ProfileBuilder.java

Profile.java: added another constructor for use with ProfileBuilder.java

ProfileManager.java: Manages / Maintains players Profiles

Profile.java: Added hashCode

History.java: Added equals and hashCode methods. Added

Added Abstract Class: ProfileTask.java ( to provide a level of abstraction between Task's related to Profiles and all other Tasks)

Server.java: Added try catch block in handleKey ( also improves logging )

BanqiGame.java: getValidMoves() now returns a Set instead of List. ( Efficiency improvement )

Square.java: added toString() and hashCode() ( Allows a square to belong in a set correctly )

Logger.java: Changed date format. ( makes the date more readable in logs ) 

Fixed a bug in FileGameManager.java: Games were not saving correctly (ie. The game would have duplicated squares)

Added FileUtils.java: Reduces the amount rewritten code in File*****Manager's

Removed main method from Client.java: (Unused)

Added an additional (optional) argument to PlayerMain.java: (Sets the log the level) useful for debugging

Redesigned PlayerConsole.java, which led to more things being redesigned
	Adds PlayerController.java
	Adds CommandConstants.java
	Adds CommandController.java
	Adds CommandParser.java
	Reduces complexity of PlayerConsole and decreases coupling

Removed ServerSession.java: unused and because of feedback#39

ClientSession.java: fixed equals and hashCode methods / reduced size of public interface

Added GetAllPlayersTask.java and DisplayPlayersTask.java: Together displays the players who are registered to the system and shows their status (i.e online or not)

Added DatabaseInviteManager.java: Skeleton class for integration with a Database

Added FileGameInviteManager.java: Class to store invitations to and from players (uses a file for storage hints the name)

GameServer.java: Moved some of the public instance methods into AbstractGameServer.java

GameInviteManager.java: Converted to Abstract Class

ServerMain.java: Added comments and updated main method for the configuration of the GameServer 
